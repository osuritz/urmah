<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="CreateRole" xml:space="preserve">
    <value>Create new role</value>
  </data>
  <data name="CreateUser" xml:space="preserve">
    <value>Create new user</value>
  </data>
  <data name="ExistingRolesFormatString" xml:space="preserve">
    <value>Existing roles: {0}</value>
    <comment>{0} = Number of roles</comment>
  </data>
  <data name="ExistingUsersFormatString" xml:space="preserve">
    <value>Existing users: {0}</value>
    <comment>{0} = Number of users</comment>
  </data>
  <data name="ManageRoles" xml:space="preserve">
    <value>Manage roles</value>
  </data>
  <data name="ManageUsers" xml:space="preserve">
    <value>Manage users</value>
  </data>
  <data name="MembershipExceptionMessage" xml:space="preserve">
    <value>Membership problem: {0}</value>
    <comment>(0} = description of the problem</comment>
  </data>
  <data name="PagingNextFormatString" xml:space="preserve">
    <value>Next {0}</value>
    <comment>{0} = name of items being paged</comment>
  </data>
  <data name="Role" xml:space="preserve">
    <value>role</value>
  </data>
  <data name="RoleBrowserTitleFormatString" xml:space="preserve">
    <value>Role Browser for {0} on {1}</value>
    <comment>{0} = Application Name, {1} = Server Name</comment>
  </data>
  <data name="RoleManagementDisabled" xml:space="preserve">
    <value>Role management is disabled for this application.</value>
  </data>
  <data name="Roles" xml:space="preserve">
    <value>roles</value>
  </data>
  <data name="RolesLinkDescription" xml:space="preserve">
    <value>Manage existing roles</value>
  </data>
  <data name="RolesTitle" xml:space="preserve">
    <value>Roles</value>
  </data>
  <data name="TitleFormatString" xml:space="preserve">
    <value>Users and Roles for {0} on {1}</value>
    <comment>{0} = Application Name, {1} = Server Name</comment>
  </data>
  <data name="User" xml:space="preserve">
    <value>user</value>
  </data>
  <data name="UserAccountLockedOut" xml:space="preserve">
    <value>User account is locked out.</value>
  </data>
  <data name="UserAccountNotLockedOut" xml:space="preserve">
    <value>User account is not locked out (that's a good thing)</value>
  </data>
  <data name="UserBrowserTitleFormatString" xml:space="preserve">
    <value>User Browser for {0} on {1}</value>
    <comment>{0} = Application Name, {1} = Server Name</comment>
  </data>
  <data name="UserIsOffline" xml:space="preserve">
    <value>User is offline</value>
  </data>
  <data name="UserIsOnline" xml:space="preserve">
    <value>User is online</value>
  </data>
  <data name="UserPagingStats" xml:space="preserve">
    <value>Users {0} to {1} of total {2} (page {3} of {4}).</value>
    <comment>{0} = first index, {1} = last index, {2} = total user count, {3} = current page, {4} = total page count</comment>
  </data>
  <data name="Users" xml:space="preserve">
    <value>users</value>
  </data>
  <data name="UserSearchFormUsername" xml:space="preserve">
    <value>User name:</value>
  </data>
  <data name="UsersLinkDescription" xml:space="preserve">
    <value>Manage existing users</value>
  </data>
  <data name="UsersTitle" xml:space="preserve">
    <value>Users</value>
  </data>
  <data name="UserSearchFormSubmitText" xml:space="preserve">
    <value>Search</value>
  </data>
  <data name="False" xml:space="preserve">
    <value>false</value>
  </data>
  <data name="Offline" xml:space="preserve">
    <value>offline</value>
  </data>
  <data name="Online" xml:space="preserve">
    <value>online</value>
  </data>
  <data name="True" xml:space="preserve">
    <value>true</value>
  </data>
  <data name="UserDetailAccountInformationTitle" xml:space="preserve">
    <value>Account Information</value>
  </data>
  <data name="UserDetailAccountIsApprovedCaption" xml:space="preserve">
    <value>Approved:</value>
  </data>
  <data name="UserDetailAccountIsLockedOutCaption" xml:space="preserve">
    <value>Locked out:</value>
  </data>
  <data name="UserDetailCreationDateCaption" xml:space="preserve">
    <value>Created:</value>
  </data>
  <data name="UserDetailEmailCaption" xml:space="preserve">
    <value>Email:</value>
  </data>
  <data name="UserDetailIsOnlineCaption" xml:space="preserve">
    <value>User status:</value>
  </data>
  <data name="UserDetailLastActivityCaption" xml:space="preserve">
    <value>Last Activity:</value>
  </data>
  <data name="UserDetailLastLoginCaption" xml:space="preserve">
    <value>Last Login:</value>
  </data>
  <data name="UserDetailPageTitleFormatString" xml:space="preserve">
    <value>User: {0}</value>
    <comment>{0} = Username</comment>
  </data>
  <data name="UserDetailTitleFormatString" xml:space="preserve">
    <value>{0} ({1})</value>
    <comment>{0} = Username, {1} = User email</comment>
  </data>
  <data name="UserDetailUsernameCaption" xml:space="preserve">
    <value>Username:</value>
  </data>
  <data name="UserNotFoundInDataStore" xml:space="preserve">
    <value>User not found in data store.</value>
  </data>
  <data name="AboutTitleFormatString" xml:space="preserve">
    <value>About {0}</value>
    <comment>{0} = Project Name</comment>
  </data>
  <data name="UserDetailRolesTitle" xml:space="preserve">
    <value>Roles</value>
  </data>
  <data name="UserInRoleAddRoleCaption" xml:space="preserve">
    <value>Add role:</value>
  </data>
  <data name="UserInRoleAddRoleOkButtonCaption" xml:space="preserve">
    <value>Add</value>
  </data>
  <data name="UserInRoleDelete" xml:space="preserve">
    <value>Remove</value>
  </data>
  <data name="CaptationFormatString" xml:space="preserve">
    <value>{0}: </value>
  </data>
  <data name="RoleExceptionMessage" xml:space="preserve">
    <value>Role problem: {0}</value>
    <comment>(0} = description of the problem</comment>
  </data>
  <data name="UserDetailProfileTitle" xml:space="preserve">
    <value>Profile</value>
  </data>
  <data name="UserDetailUnlock" xml:space="preserve">
    <value>Unlock</value>
  </data>
  <data name="Create" xml:space="preserve">
    <value>Create</value>
  </data>
  <data name="UserCreationFailureFormatString" xml:space="preserve">
    <value>User account creation failed: {0}</value>
  </data>
  <data name="UserCreationSuccess" xml:space="preserve">
    <value>User account was successfully created.</value>
  </data>
  <data name="UserDetailApprovedCheckboxCaption" xml:space="preserve">
    <value>Approved</value>
  </data>
  <data name="UserDetailPasswordAnswerCaption" xml:space="preserve">
    <value>Password answer:</value>
    <comment>(0} = description of the problem</comment>
  </data>
  <data name="UserDetailPasswordCaption" xml:space="preserve">
    <value>Password:</value>
  </data>
  <data name="UserDetailPasswordConfirmCaption" xml:space="preserve">
    <value>Confirm:</value>
  </data>
  <data name="UserDetailPasswordQuestionCaption" xml:space="preserve">
    <value>Password question:</value>
  </data>
  <data name="UserEditTile_CreateFormatString" xml:space="preserve">
    <value>Create User for {0} on {1}</value>
    <comment>{0} = Application Name, {1} = Server Name</comment>
  </data>
  <data name="UserCreateBasicBoxTitle" xml:space="preserve">
    <value>Basic Information</value>
  </data>
  <data name="UserCreateFurtherBoxTitle" xml:space="preserve">
    <value>Further Information (optional)</value>
  </data>
  <data name="UnknownError" xml:space="preserve">
    <value>Unknown error</value>
  </data>
  <data name="ExistingUsersOnlineTotalRation" xml:space="preserve">
    <value>Online users: {1} / {0}</value>
    <comment>{0} = Number of users, {1} = Number of online users</comment>
  </data>
  <data name="RolesActionDetail" xml:space="preserve">
    <value>Details&amp;hellip;</value>
  </data>
  <data name="RolesPagingStats" xml:space="preserve">
    <value>{0} roles found.</value>
    <comment>{0} Number of roles</comment>
  </data>
  <data name="UsersActionDetail" xml:space="preserve">
    <value>Details&amp;hellip;</value>
  </data>
</root>